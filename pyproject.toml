# pyproject.toml
[build-system]
requires = ["setuptools>=61", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pangeo-forge-esgf"
dynamic = ["version"]
requires-python = ">=3.9"
description = "Using queries to the ESGF API to generate urls and keyword arguments for receipe generation in pangeo-forge"
readme = "README.md"
authors = [
  { name = "Julius Busecke", email = "julius@ldeo.columbia.edu" }
]
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
]
license = { text = "Apache-2.0" }
keywords = ["pangeo", "data", "esgf"]
dependencies = [
    "aiohttp",
    "tqdm",
    "backoff",
    "requests",
]

[project.optional-dependencies]
test = [
    "pytest"
]

dev = [
    "ruff",
    "mypy",
    "types-requests",
    "pre-commit",
    "pangeo-forge-esgf[test]"
]

[project.urls]
Homepage = "https://github.com/jbusecke/pangeo-forge-esgf"
Tracker = "https://github.com/jbusecke/pangeo-forge-esgf/issues"

[tool.setuptools_scm]
write_to = "pangeo_forge_esgf/_version.py"
write_to_template = "__version__ = '{version}'"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "pangeo_forge_esgf/__init__.py",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
